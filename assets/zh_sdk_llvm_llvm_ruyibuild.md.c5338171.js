import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.35bd0d1d.js";const F=JSON.parse('{"title":"使用 ruyibuild 构建","description":"","frontmatter":{},"headers":[],"relativePath":"zh/sdk/llvm/llvm_ruyibuild.md","filePath":"zh/sdk/llvm/llvm_ruyibuild.md","lastUpdated":1698734878000}'),p={name:"zh/sdk/llvm/llvm_ruyibuild.md"},o=l(`<h1 id="使用-ruyibuild-构建" tabindex="-1">使用 ruyibuild 构建 <a class="header-anchor" href="#使用-ruyibuild-构建" aria-label="Permalink to &quot;使用 ruyibuild 构建&quot;">​</a></h1><blockquote><p>创建编译的虚拟环境 (如已配置，可跳过)</p><p>更新 pip(可选)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--upgrade</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pip</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--upgrade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pip</span></span></code></pre></div><p>安装 virtualenv 和 virtualenvwrapper</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">virtualenv</span></span>
<span class="line"><span style="color:#B392F0;">pip3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">virtualenvwrapper</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">virtualenv</span></span>
<span class="line"><span style="color:#6F42C1;">pip3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">virtualenvwrapper</span></span></code></pre></div><p>在.bashrc 中添加配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 虚拟环境存放目录，.virtualenvs 目录可自拟</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> WORKON_HOME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">~/.virtualenvs</span></span>
<span class="line"><span style="color:#6A737D;"># 指定 virtualenvwrapper 执行的 python 版本</span></span>
<span class="line"><span style="color:#6A737D;"># which python3 获取路径</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> VIRTUALENVWRAPPER_PYTHON</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/usr/bin/python3</span></span>
<span class="line"><span style="color:#6A737D;"># 指定 virtualenv 的路径</span></span>
<span class="line"><span style="color:#6A737D;"># find -name virtualenv 获取路径</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> VIRTUALENVWRAPPER_VIRTUALENV</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">~/.local/bin/virtualenv</span></span>
<span class="line"><span style="color:#6A737D;"># virtualenvwrapper.sh 所在目录</span></span>
<span class="line"><span style="color:#6A737D;"># find -name virtualenvwrapper.sh</span></span>
<span class="line"><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.local/bin/virtualenvwrapper.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 虚拟环境存放目录，.virtualenvs 目录可自拟</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> WORKON_HOME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">~/.virtualenvs</span></span>
<span class="line"><span style="color:#6A737D;"># 指定 virtualenvwrapper 执行的 python 版本</span></span>
<span class="line"><span style="color:#6A737D;"># which python3 获取路径</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> VIRTUALENVWRAPPER_PYTHON</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/usr/bin/python3</span></span>
<span class="line"><span style="color:#6A737D;"># 指定 virtualenv 的路径</span></span>
<span class="line"><span style="color:#6A737D;"># find -name virtualenv 获取路径</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> VIRTUALENVWRAPPER_VIRTUALENV</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">~/.local/bin/virtualenv</span></span>
<span class="line"><span style="color:#6A737D;"># virtualenvwrapper.sh 所在目录</span></span>
<span class="line"><span style="color:#6A737D;"># find -name virtualenvwrapper.sh</span></span>
<span class="line"><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.local/bin/virtualenvwrapper.sh</span></span></code></pre></div><p>使能.bashrc 配置从而可以使用 python 虚拟环境</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.bashrc</span></span>
<span class="line"><span style="color:#6A737D;"># 以下是常用命令</span></span>
<span class="line"><span style="color:#6A737D;"># 创建虚拟环境</span></span>
<span class="line"><span style="color:#B392F0;">mkvirtualenv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 切换到某个虚拟环境</span></span>
<span class="line"><span style="color:#B392F0;">workon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 退出当前虚拟环境</span></span>
<span class="line"><span style="color:#B392F0;">deactivate</span></span>
<span class="line"><span style="color:#6A737D;"># 删除某个虚拟环境</span></span>
<span class="line"><span style="color:#B392F0;">rmvirtualenv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 列出所有虚拟环境</span></span>
<span class="line"><span style="color:#B392F0;">lsvirtualenv</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.bashrc</span></span>
<span class="line"><span style="color:#6A737D;"># 以下是常用命令</span></span>
<span class="line"><span style="color:#6A737D;"># 创建虚拟环境</span></span>
<span class="line"><span style="color:#6F42C1;">mkvirtualenv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 切换到某个虚拟环境</span></span>
<span class="line"><span style="color:#6F42C1;">workon</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 退出当前虚拟环境</span></span>
<span class="line"><span style="color:#6F42C1;">deactivate</span></span>
<span class="line"><span style="color:#6A737D;"># 删除某个虚拟环境</span></span>
<span class="line"><span style="color:#6F42C1;">rmvirtualenv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildllvm</span></span>
<span class="line"><span style="color:#6A737D;"># 列出所有虚拟环境</span></span>
<span class="line"><span style="color:#6F42C1;">lsvirtualenv</span></span></code></pre></div><p>创建虚拟环境用于编译，例如</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkvirtualenv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buidllvm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkvirtualenv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buidllvm</span></span></code></pre></div><p>至此，python 的虚拟环境配置完成，ruyibuild 的安装和使用可在虚拟环境中进行，而不影响 host 机 python 环境</p><p>安装 ruyibuild</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://repo.tarsier-infra.com:8080/ruyisdk/misc/ruyibuild-0.0.2-py3-none-any.whl</span></span>
<span class="line"><span style="color:#B392F0;">pip3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ruyibuild-0.0.2-py3-none-any.whl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://repo.tarsier-infra.com:8080/ruyisdk/misc/ruyibuild-0.0.2-py3-none-any.whl</span></span>
<span class="line"><span style="color:#6F42C1;">pip3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ruyibuild-0.0.2-py3-none-any.whl</span></span></code></pre></div><p>创建编译配置用于初始化，例如：config_llvm15.yaml</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/ruyisdk/ruyici.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">llvm</span></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test.yaml</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">&quot;</span><span style="color:#9ECBFF;">EOT</span><span style="color:#E1E4E8;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">config_file:</span></span>
<span class="line"><span style="color:#9ECBFF;">   repo_url: git@github.com:ChunyuLiao/ruyici.git</span></span>
<span class="line"><span style="color:#9ECBFF;">   branch: main</span></span>
<span class="line"><span style="color:#9ECBFF;">   path: llvm/config_llvm15.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">EOT</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/ruyisdk/ruyici.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">llvm</span></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test.yaml</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">&quot;</span><span style="color:#032F62;">EOT</span><span style="color:#24292E;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">config_file:</span></span>
<span class="line"><span style="color:#032F62;">   repo_url: git@github.com:ChunyuLiao/ruyici.git</span></span>
<span class="line"><span style="color:#032F62;">   branch: main</span></span>
<span class="line"><span style="color:#032F62;">   path: llvm/config_llvm15.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">EOT</span></span></code></pre></div><p>初始化工作</p><p>: 执行以下命令创建工作目录， 后续自动下载的源码以及构建生成的软件包都会在此目录下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ruyibuild</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">llvm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ruyibuild</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">llvm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test.yaml</span></span></code></pre></div><p>准备构建环境和代码</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ruyibuild</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ruyibuild</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span></span></code></pre></div><p>执行构建</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ruyibuild</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generate</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ruyibuild</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generate</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>生成目标 toolchain</p></blockquote>`,2),e=[o];function t(c,r,i,y,E,d){return a(),n("div",null,e)}const v=s(p,[["render",t]]);export{F as __pageData,v as default};
