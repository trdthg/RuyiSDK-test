import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.35bd0d1d.js";const E=JSON.parse('{"title":"运行 Coremark","description":"","frontmatter":{},"headers":[],"relativePath":"en/benchmark/coremark.md","filePath":"en/benchmark/coremark.md","lastUpdated":null}'),e={name:"en/benchmark/coremark.md"},p=n(`<h1 id="运行-coremark" tabindex="-1">运行 Coremark <a class="header-anchor" href="#运行-coremark" aria-label="Permalink to &quot;运行 Coremark&quot;">​</a></h1><p>这里我们从零开始，安装 ruyisdk 并编译运行 Coremark。ruyisdk 包含 ruyibuild 和 ruyishell 两个工具，ruyibuild 可用于下&gt;载工具链源码，从源码构建工具链。如果我们想要开箱即用，那么可以选择 ruyishell。这里我们也是介绍使用 ruyishell 交叉编译 Coremark 的步骤。</p><h2 id="安装-ruyishell" tabindex="-1">安装 ruyishell <a class="header-anchor" href="#安装-ruyishell" aria-label="Permalink to &quot;安装 ruyishell&quot;">​</a></h2><p>ruyishell 是一个辅助开发工具，不需要手动搭建复杂的环境和下载代码，只需要几条命名，就可以直接获取所需要的构建&gt;好的软件包。</p><p>假设我们的 shell 是 bash（大多数情况可能是这样），那么需要先安装 zsh。</p><ol><li><p>安装 zsh</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zsh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zsh</span></span></code></pre></div></li><li><p>下载 ruyishell 仓库</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/ruyisdk/ruyishell.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/ruyisdk/ruyishell.git</span></span></code></pre></div><ol><li>运行 install.sh 安装 ruyishell安装成功显示如下：</li></ol><p>（如果在安装依赖时脚本就退出了，没有成功安装的话，可以先执行一下 sudo apt update 命令）</p></li></ol><h2 id="下载工具链" tabindex="-1">下载工具链 <a class="header-anchor" href="#下载工具链" aria-label="Permalink to &quot;下载工具链&quot;">​</a></h2><p>Ruyi 提供多种编译环境，可以在 repo.xml 中查看支持的 SDK 环境，以及对应的 SDKid。这里我们选择&quot;基于 sg2042 的 riscv64gc gcc 开发环境&quot;，它的 sdkid 是 1。我们执行下面的命令来安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span></span>
<span class="line"><span style="color:#B392F0;">ruyi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span></span>
<span class="line"><span style="color:#B392F0;">ruyi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span></span>
<span class="line"><span style="color:#B392F0;">ruyi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--id=1</span></span>
<span class="line"><span style="color:#B392F0;">ruyi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">switch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--id=1</span></span>
<span class="line"><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span></span>
<span class="line"><span style="color:#6F42C1;">ruyi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span></span>
<span class="line"><span style="color:#6F42C1;">ruyi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span></span>
<span class="line"><span style="color:#6F42C1;">ruyi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--id=1</span></span>
<span class="line"><span style="color:#6F42C1;">ruyi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">switch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--id=1</span></span>
<span class="line"><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span></span></code></pre></div><p>这样我们就通过 ruyi 安装好了 riscv64gc 的 SDK 环境。测试一下是否成功：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">riscv64-ruyi-linux-gnu-gcc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">riscv64-ruyi-linux-gnu-gcc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span></code></pre></div><h2 id="交叉编译-coremark" tabindex="-1">交叉编译 Coremark <a class="header-anchor" href="#交叉编译-coremark" aria-label="Permalink to &quot;交叉编译 Coremark&quot;">​</a></h2><ol><li>下载 Coremark<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/eembc/coremark.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/eembc/coremark.git</span></span></code></pre></div></li><li>交叉编译 Coremark<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">coremark</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">coremark</span></span></code></pre></div></li></ol><p>mkdir rv64 &amp;&amp; cp simple/* rv64/ sed -i &#39;s/ee_u32 ee_ptr_int/unsigned long long ee_ptr_int/g&#39; rv64/core_portme.h make compile PORT_DIR=rv64 CC=$riscv64-ruyi-linux-gnu-gcc LD=$riscv64-ruyi-linux-gnu-gcc XCFLAGS=&quot;-march=$rv64gc&quot;</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">编译成功会看到 coremark 目录下生成了 coremark.exe，将 coremark.exe 拷贝到我们的 riscv 开发板或者 Qemu 上就可以运行了。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">编译成功会看到 coremark 目录下生成了 coremark.exe，将 coremark.exe 拷贝到我们的 riscv 开发板或者 Qemu 上就可以运行了。</span></span></code></pre></div>`,15),o=[p];function c(r,t,i,y,d,h){return a(),l("div",null,o)}const g=s(e,[["render",c]]);export{E as __pageData,g as default};
