import{_ as t,o as e,c as s,Q as r}from"./chunks/framework.35bd0d1d.js";const h=JSON.parse('{"title":"使用 ruyishell 下载测试","description":"","frontmatter":{"title":"使用 ruyishell 下载测试"},"headers":[],"relativePath":"zh/sdk/gcc13-rv64gcv/rv64gcv_ruyishell.md","filePath":"zh/sdk/gcc13-rv64gcv/rv64gcv_ruyishell.md","lastUpdated":1698734878000}'),_={name:"zh/sdk/gcc13-rv64gcv/rv64gcv_ruyishell.md"},c=r('<p>::: tabs 编写测试用例</p><p>::: code-tab c demo</p><p>// 测试用例示例 rvv_strcpy.c #include &lt;riscv_vector.h&gt; #include &lt;string.h&gt;</p><p>// reference <a href="https://github.com/riscv/riscv-v-spec/blob/master/example/strcpy.s" target="_blank" rel="noreferrer">https://github.com/riscv/riscv-v-spec/blob/master/example/strcpy.s</a> char <em>strcpy_vec(char</em>dst, const char <em>src) { char</em>save = dst; size_t vlmax = __riscv_vsetvlmax_e8m8(); long first_set_bit = -1; size_t vl; while (first_set_bit &lt; 0) { vint8m8_t vec_src = __riscv_vle8ff_v_i8m8(src, &amp;vl, vlmax);</p><blockquote><p>vbool1_t string_terminate = __riscv_vmseq_vx_i8m8_b1(vec_src, 0, vl); vbool1_t mask = __riscv_vmsif_m_b1(string_terminate, vl);</p><p>__riscv_vse8_v_i8m8_m(mask, dst, vec_src, vl);</p><p>src += vl; dst += vl;</p><p>first_set_bit = __riscv_vfirst_m_b1(string_terminate, vl); } return save;</p></blockquote><p>} :::</p><p>::: code-tab bash build</p><p># 使用构建的工具编译测试用例，查看汇编文件中是否使用 V 扩展指令 vsetvli,vle8ff.v,vmseq.vi,vmsif.m,vse8.v,vfirst.m build/bin/riscv64-unknown-linux-gnu-gcc rvv_strcpy.c -O3 -S cat rvv_strcpy.s ::: :::</p>',8),v=[c];function i(l,a,p,m,o,n){return e(),s("div",null,v)}const b=t(_,[["render",i]]);export{h as __pageData,b as default};
