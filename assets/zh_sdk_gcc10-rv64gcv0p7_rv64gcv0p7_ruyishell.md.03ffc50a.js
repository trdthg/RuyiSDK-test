import{_ as e,o as t,c as s,Q as c}from"./chunks/framework.35bd0d1d.js";const m=JSON.parse('{"title":"使用 ruyishell 下载测试","description":"","frontmatter":{"title":"使用 ruyishell 下载测试"},"headers":[],"relativePath":"zh/sdk/gcc10-rv64gcv0p7/rv64gcv0p7_ruyishell.md","filePath":"zh/sdk/gcc10-rv64gcv0p7/rv64gcv0p7_ruyishell.md","lastUpdated":1698734878000}'),r={name:"zh/sdk/gcc10-rv64gcv0p7/rv64gcv0p7_ruyishell.md"},a=c('<p>::: tabs 编写测试用例</p><p>::: code-tab c demo</p><p>#include &lt;riscv_vector.h&gt; #include &lt;string.h&gt;</p><p>// reference <a href="https://github.com/riscv/riscv-v-spec/blob/master/example/strcpy.s" target="_blank" rel="noreferrer">https://github.com/riscv/riscv-v-spec/blob/master/example/strcpy.s</a> char <em>strcpy_vec(char</em>dst, const char <em>src) { char</em>save = dst; size_t vlmax = vsetvlmax_e8m8(); long first_set_bit = -1; size_t vl; while (first_set_bit &lt; 0) { src += vl; dst += vl; } return save; } :::</p><p>::: code-tab bash build</p><p># 使用构建的工具编译测试用例，查看汇编文件中是否使用 V 扩展指令 vsetvli build/bin/riscv64-unknown-linux-gnu-gcc vector.c -S cat vector.s ::: :::</p>',6),l=[a];function i(_,p,v,o,n,d){return t(),s("div",null,l)}const u=e(r,[["render",i]]);export{m as __pageData,u as default};
